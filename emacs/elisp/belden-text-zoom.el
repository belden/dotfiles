(provide 'belden-text-zoom)

(defvar aw-font-picked 6)
(defvar aw-font-list)
(defun belden-change-font (&optional font-index)
  (interactive)
  (if (not font-index) (setq font-index (1+ aw-font-picked)))
  (let (width height)
    (if (>= font-index (length aw-font-list)) (setq font-index 0))
    (setq aw-font-picked font-index)
    (setq width (belden-frame-current-width))
    (setq height (belden-frame-current-height))
    (set-default-font (belden-font-number font-index))
    (belden-set-frame-size width height)
    ))
(defun belden-font-number (font-index)
  (let ((count 0) (font aw-font-list))
    (while (< count font-index)
      (setq font (cdr font))
      (setq count (1+ count)))
    (car font)))
(defun belden-default-font-teenier ()
  (interactive) (belden-change-font 0))
(defun belden-default-font-teeny ()
  (interactive) (belden-change-font 1))
(defun belden-default-font-tinier ()
  (interactive) (belden-change-font 2))
(defun belden-default-font-tiny ()
  (interactive) (belden-change-font 3))
(defun belden-default-font-small ()
  (interactive) (belden-change-font 4))
(defun belden-default-font-medium ()
  (interactive) (belden-change-font 5))
(defun belden-default-font-big ()
  (interactive) (belden-change-font 6))
(defun belden-default-font-huge ()
  (interactive) (belden-change-font 7))
(defun belden-default-font-huge-wide ()
  (interactive) (belden-change-font 8))

(defun belden-bigger-font ()
  (interactive)
  (let ((fontsize (1+ aw-font-picked)))
    (when (>= fontsize (length aw-font-list))
      (message "This is the biggest font I've got")
      (setq fontsize (1- (length aw-font-list))))
    (belden-change-font fontsize)))
(defun belden-smaller-font ()
  (interactive)
  (let ((fontsize (1- aw-font-picked)))
    (when (<= fontsize 0)
      (message "This is the smallest font I've got")
      (setq fontsize 0))
    (belden-change-font fontsize)))

